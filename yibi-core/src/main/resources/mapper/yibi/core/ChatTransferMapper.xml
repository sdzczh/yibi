<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yibi.core.dao.ChatTransferMapper">
  <resultMap id="BaseResultMap" type="com.yibi.core.entity.ChatTransfer">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="coinType" jdbcType="TINYINT" property="cointype" />
    <result column="fromUserId" jdbcType="INTEGER" property="fromuserid" />
    <result column="toUserId" jdbcType="INTEGER" property="touserid" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="fee" jdbcType="DECIMAL" property="fee" />
    <result column="remain" jdbcType="DECIMAL" property="remain" />
    <result column="amtOfCny" jdbcType="DECIMAL" property="amtofcny" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, coinType, fromUserId, toUserId, amount, fee, remain, amtOfCny, note, createTime, 
    updateTime
  </sql>
  <insert id="insert" parameterType="com.yibi.core.entity.ChatTransfer">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into chat_transfer (coinType, fromUserId, toUserId, 
      amount, fee, remain, 
      amtOfCny, note, createTime, 
      updateTime)
    values (#{cointype,jdbcType=TINYINT}, #{fromuserid,jdbcType=INTEGER}, #{touserid,jdbcType=INTEGER}, 
      #{amount,jdbcType=DECIMAL}, #{fee,jdbcType=DECIMAL}, #{remain,jdbcType=DECIMAL}, 
      #{amtofcny,jdbcType=DECIMAL}, #{note,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yibi.core.entity.ChatTransfer">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into chat_transfer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cointype != null">
        coinType,
      </if>
      <if test="fromuserid != null">
        fromUserId,
      </if>
      <if test="touserid != null">
        toUserId,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="fee != null">
        fee,
      </if>
      <if test="remain != null">
        remain,
      </if>
      <if test="amtofcny != null">
        amtOfCny,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cointype != null">
        #{cointype,jdbcType=TINYINT},
      </if>
      <if test="fromuserid != null">
        #{fromuserid,jdbcType=INTEGER},
      </if>
      <if test="touserid != null">
        #{touserid,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="fee != null">
        #{fee,jdbcType=DECIMAL},
      </if>
      <if test="remain != null">
        #{remain,jdbcType=DECIMAL},
      </if>
      <if test="amtofcny != null">
        #{amtofcny,jdbcType=DECIMAL},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.yibi.core.entity.ChatTransfer">
    update chat_transfer
    set coinType = #{cointype,jdbcType=TINYINT},
      fromUserId = #{fromuserid,jdbcType=INTEGER},
      toUserId = #{touserid,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      fee = #{fee,jdbcType=DECIMAL},
      remain = #{remain,jdbcType=DECIMAL},
      amtOfCny = #{amtofcny,jdbcType=DECIMAL},
      note = #{note,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yibi.core.entity.ChatTransfer">
    update chat_transfer
    <set>
      <if test="cointype != null">
        coinType = #{cointype,jdbcType=TINYINT},
      </if>
      <if test="fromuserid != null">
        fromUserId = #{fromuserid,jdbcType=INTEGER},
      </if>
      <if test="touserid != null">
        toUserId = #{touserid,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="fee != null">
        fee = #{fee,jdbcType=DECIMAL},
      </if>
      <if test="remain != null">
        remain = #{remain,jdbcType=DECIMAL},
      </if>
      <if test="amtofcny != null">
        amtOfCny = #{amtofcny,jdbcType=DECIMAL},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from chat_transfer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from chat_transfer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" parameterType="java.util.Map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from chat_transfer
    where 1=1 
    <if test="cointype != null">
       and  coinType = #{cointype,jdbcType=TINYINT}
    </if>
    <if test="fromuserid != null">
       and  fromUserId = #{fromuserid,jdbcType=INTEGER}
    </if>
    <if test="touserid != null">
       and  toUserId = #{touserid,jdbcType=INTEGER}
    </if>
    <if test="amount != null">
       and  amount = #{amount,jdbcType=DECIMAL}
    </if>
    <if test="fee != null">
       and  fee = #{fee,jdbcType=DECIMAL}
    </if>
    <if test="remain != null">
       and  remain = #{remain,jdbcType=DECIMAL}
    </if>
    <if test="amtofcny != null">
       and  amtOfCny = #{amtofcny,jdbcType=DECIMAL}
    </if>
    <if test="note != null">
       and  note = #{note,jdbcType=VARCHAR}
    </if>
    <if test="createtime != null">
       and  createTime = #{createtime,jdbcType=TIMESTAMP}
    </if>
    <if test="updatetime != null">
       and  updateTime = #{updatetime,jdbcType=TIMESTAMP}
    </if>
     order by id desc 
  </select>
  <select id="selectPaging" parameterType="java.util.Map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from chat_transfer
    where 1=1 
    <if test="cointype != null">
       and  coinType = #{cointype,jdbcType=TINYINT}
    </if>
    <if test="fromuserid != null">
       and  fromUserId = #{fromuserid,jdbcType=INTEGER}
    </if>
    <if test="touserid != null">
       and  toUserId = #{touserid,jdbcType=INTEGER}
    </if>
    <if test="amount != null">
       and  amount = #{amount,jdbcType=DECIMAL}
    </if>
    <if test="fee != null">
       and  fee = #{fee,jdbcType=DECIMAL}
    </if>
    <if test="remain != null">
       and  remain = #{remain,jdbcType=DECIMAL}
    </if>
    <if test="amtofcny != null">
       and  amtOfCny = #{amtofcny,jdbcType=DECIMAL}
    </if>
    <if test="note != null">
       and  note = #{note,jdbcType=VARCHAR}
    </if>
    <if test="createtime != null">
       and  createTime = #{createtime,jdbcType=TIMESTAMP}
    </if>
    <if test="updatetime != null">
       and  updateTime = #{updatetime,jdbcType=TIMESTAMP}
    </if>
     order by id desc limit #{firstResult,jdbcType=INTEGER},#{maxResult,jdbcType=INTEGER}
  </select>
  <select id="selectCount" parameterType="java.util.Map" resultType="java.lang.Integer">
    select count(*) 
    from chat_transfer 
    where 1=1 
    <if test="cointype != null">
       and  coinType = #{cointype,jdbcType=TINYINT}
    </if>
    <if test="fromuserid != null">
       and  fromUserId = #{fromuserid,jdbcType=INTEGER}
    </if>
    <if test="touserid != null">
       and  toUserId = #{touserid,jdbcType=INTEGER}
    </if>
    <if test="amount != null">
       and  amount = #{amount,jdbcType=DECIMAL}
    </if>
    <if test="fee != null">
       and  fee = #{fee,jdbcType=DECIMAL}
    </if>
    <if test="remain != null">
       and  remain = #{remain,jdbcType=DECIMAL}
    </if>
    <if test="amtofcny != null">
       and  amtOfCny = #{amtofcny,jdbcType=DECIMAL}
    </if>
    <if test="note != null">
       and  note = #{note,jdbcType=VARCHAR}
    </if>
    <if test="createtime != null">
       and  createTime = #{createtime,jdbcType=TIMESTAMP}
    </if>
    <if test="updatetime != null">
       and  updateTime = #{updatetime,jdbcType=TIMESTAMP}
    </if>
  </select>
  <select id="querySumSendDay" parameterType="java.util.Map" resultType="BigDecimal">
    SELECT IFNULL(SUM(amtOfCny),0) sumAmt FROM chat_transfer WHERE fromUserId = #{userId} and createTime &gt;=#{start} and createTime &lt;=#{end}
  </select>
  <select id="queryByIdAndUserId" parameterType="java.util.Map" resultType="Map">
    SELECT IF(f.id IS NULL OR f.remarkName='' ,u.nickName,f.remarkName) name, t.`amount`,t.`coinType`,t.`amtOfCny`,t.`createTime`
    FROM chat_transfer t
    LEFT JOIN user u ON t.`fromUserId` = u.id
    LEFT JOIN chat_friends f  ON f.`friendId` = t.`fromUserId` AND f.`userId` = #{userId}
    WHERE t.id = #{transferId}
  </select>
  <select id="querySendList" parameterType="java.util.Map" resultType="Map">
    SELECT IF(f.id IS NULL OR f.remarkName='' ,u.nickName,f.remarkName) name, t.`amount`,t.`coinType`,t.`amtOfCny` ,t.`createTime`
    FROM chat_transfer t
    LEFT JOIN user u ON u.id = t.`toUserId`
    LEFT JOIN chat_friends f ON t.`toUserId` = f.`friendId` AND f.`userId` = #{userId}
    WHERE t.`fromUserId` = #{userId} order by t.id desc
    limit #{firstResult},#{maxResult}
  </select>
  <select id="queryReciveList" parameterType="java.util.Map" resultType="Map">
    SELECT IF(f.id IS NULL OR f.remarkName='' ,u.nickName,f.remarkName) name, t.`amount`,t.`coinType`,t.`amtOfCny`,t.`createTime`
    FROM chat_transfer t
    LEFT JOIN user u ON t.`fromUserId` = u.id
    LEFT JOIN chat_friends f  ON f.`friendId` = t.`fromUserId` AND f.`userId` = #{userId}
    WHERE  t.`toUserId` = #{userId} order by t.id desc
    limit #{firstResult},#{maxResult}
  </select>
  <select id="querySumSend" parameterType="Integer" resultType="BigDecimal">
    SELECT IFNULL(SUM(amtOfCny),0) sumAmt FROM chat_transfer WHERE fromUserId = #{userId}
  </select>
  <select id="querySumRecive" parameterType="Integer" resultType="BigDecimal">
    SELECT IFNULL(SUM(amtOfCny),0) sumAmt FROM chat_transfer WHERE toUserId = #{userId}
  </select>
</mapper>